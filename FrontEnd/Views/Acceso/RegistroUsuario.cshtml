@* RegistroUsuario.cshtml *@
@{
    ViewData["Title"] = "Registro de Usuario";
    Layout = "~/Views/Shared/_LayoutUsuarios.cshtml"; // Assuming this layout exists and is correct
}
@model FrontEnd.Models.RegistroModeloUsuario
<div class="jumbotron jumbotron-fluid mb-5">
    <div class="container py-5">
        <div class="row align-items-center">
            <div class="col-lg-6 py-5 py-lg-0">
                <h1 class="text-white mb-4">Registro de usuarios</h1>
                <p class="text-white-50 mb-4">Completa los campos para obtener acceso al sistema administrativo.</p>
            </div>
            <div class="col-lg-6">
                <div class="bg-primary py-5 px-4 px-sm-5">
                    <form class="py-5" asp-controller="Acceso" asp-action="RegistroUsuario" method="post" id="registrationForm">
                        @Html.AntiForgeryToken() @* Keep the anti-forgery token *@

                        @* Display Model-level errors and specific field errors if needed *@
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger text-white" role="alert"></div>

                        @if (TempData["MensajeRegistroCorrecto"] != null)
                        {
                            <div class="alert alert-success" role="alert">
                                @TempData["MensajeRegistroCorrecto"]
                            </div>
                        }
                        <h5 class="text-white text-uppercase font-weight-bold mt-4" style="color:#1F1F2E !important">Datos Personales</h5>
                        <div class="form-group">
                            <label asp-for="Nombre" class="text-white"></label>
                            <input asp-for="Nombre" type="text" class="form-control border-0 p-4" placeholder="Nombre" />
                            <span asp-validation-for="Nombre" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="PrimerApellido" class="text-white"></label>
                            <input asp-for="PrimerApellido" type="text" class="form-control border-0 p-4" placeholder="Primer Apellido" />
                            <span asp-validation-for="PrimerApellido" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="SegundoApellido" class="text-white"></label>
                            <input asp-for="SegundoApellido" type="text" class="form-control border-0 p-4" placeholder="Segundo Apellido (Opcional)" />
                            <span asp-validation-for="SegundoApellido" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="TelefonoPrincipal" class="text-white"></label>
                            <input asp-for="TelefonoPrincipal" type="tel" class="form-control border-0 p-4" placeholder="Teléfono (Ej: 88888888)" pattern="\d{8}" title="El número de teléfono debe tener 8 dígitos." />
                            <span asp-validation-for="TelefonoPrincipal" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Correo" class="text-white"></label>
                            <input asp-for="Correo" type="email" class="form-control border-0 p-4" placeholder="Correo Electrónico" />
                            <span asp-validation-for="Correo" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>

                        @* Removed Cedula input as it's not mapped in the controller/entity *@
                        @*
                        <div class="form-group">
                             <label asp-for="Cedula" class="text-white"></label>
                            <input asp-for="Cedula" type="text" class="form-control border-0 p-4" placeholder="Cédula (Ejemplo: 1011110111)" pattern="\d{10}" title="La cédula debe tener 10 dígitos." />
                            <span asp-validation-for="Cedula" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>
                        *@

                        @* Removed Direccion input as it's not mapped in the controller/entity *@
                        @*
                         <div class="form-group">
                              <label asp-for="Direccion" class="text-white"></label>
                             <input asp-for="Direccion" type="text" class="form-control border-0 p-4" placeholder="Dirección" />
                             <span asp-validation-for="Direccion" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                         </div>
                         *@

                        @* Note: IdRol and IdClinica are in the model but have no inputs here.
                             They will use the default values from RegistroModeloUsuario.cs unless inputs are added.
                             Example (requires fetching roles/clinics for dropdown):
                         <div class="form-group">
                             <label asp-for="IdRol" class="text-white"></label>
                             <select asp-for="IdRol" class="form-control" asp-items="ViewBag.Roles"></select>
                             <span asp-validation-for="IdRol" class="text-danger"></span>
                         </div>
                         *@

                        <h5 class="text-white text-uppercase font-weight-bold mt-4" style="color:#1F1F2E !important">Contraseña</h5>
                        <div class="form-group">
                            <label asp-for="Contrasena" class="text-white"></label>
                            <input asp-for="Contrasena" type="password" class="form-control border-0 p-4" id="password" placeholder="Contraseña" />
                            <div class="bg-light p-3 mt-2" id="passwordHelp" style="display: none; border-radius: 5px;">
                                <p class="mb-1">La contraseña debe cumplir con:</p>
                                <ul class="mb-0">
                                    @* Corrected length check message and requirement (6) to match model *@
                                    <li id="length" class="text-danger">Mínimo 6 caracteres</li>
                                    <li id="uppercase" class="text-danger">Una letra mayúscula</li>
                                    <li id="lowercase" class="text-danger">Una letra minúscula</li>
                                    <li id="number" class="text-danger">Un número</li>
                                    <li id="special" class="text-danger">Un carácter especial (#$%^&+=!)</li>
                                </ul>
                            </div>
                            <span asp-validation-for="Contrasena" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ConfirmarContrasena" class="text-white"></label>
                            @* Changed to asp-for *@
                            <input asp-for="ConfirmarContrasena" type="password" class="form-control border-0 p-4" id="confirm-password" placeholder="Confirmar Contraseña" />
                            <div id="passwordMismatch" class="alert alert-danger mt-2" style="display: none;">
                                <strong>Las contraseñas no coinciden.</strong>
                            </div>
                            <span asp-validation-for="ConfirmarContrasena" class="text-danger bg-light mt-1 d-block p-1 rounded"></span>
                        </div>

                        <div>
                            <button class="btn btn-dark btn-block border-0 py-3" type="submit">Registrarse</button>
                        </div>
                        <div class="text-center mt-3">
                            @* Link to the correct user login page *@
                            <p class="text-white">¿Ya tienes una cuenta? <a asp-controller="Acceso" asp-action="InicioSesionUsuario" class="text-dark font-weight-bold">Inicia Sesión</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Validación de la nueva contraseña
        document.getElementById("password").addEventListener("input", function () {
            const password = this.value;
            const helpDiv = document.getElementById("passwordHelp");
            const length = document.getElementById("length");
            const uppercase = document.getElementById("uppercase");
            const lowercase = document.getElementById("lowercase");
            const number = document.getElementById("number");
            const special = document.getElementById("special");

            // Only show help if user starts typing
            helpDiv.style.display = password.length > 0 ? "block" : "none";

            // Validaciones
            // Corrected length check to >= 6
            length.classList.toggle("text-success", password.length >= 6);
            length.classList.toggle("text-danger", password.length < 6);

            uppercase.classList.toggle("text-success", /[A-Z]/.test(password));
            uppercase.classList.toggle("text-danger", !/[A-Z]/.test(password));

            lowercase.classList.toggle("text-success", /[a-z]/.test(password));
            lowercase.classList.toggle("text-danger", !/[a-z]/.test(password));

            number.classList.toggle("text-success", /\d/.test(password));
            number.classList.toggle("text-danger", !/\d/.test(password));

            // Ensure regex matches the intended special characters
            special.classList.toggle("text-success", /[#$%^&+=!]/.test(password));
            special.classList.toggle("text-danger", !/[#$%^&+=!]/.test(password));
        });

        // Validación de coincidencia de contraseñas (Client-side feedback)
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirm-password');
        const passwordMismatch = document.getElementById('passwordMismatch');

        function validarContraseña() {
             // Only show mismatch if confirm password has content
            if (confirmPasswordInput.value.length > 0 && passwordInput.value !== confirmPasswordInput.value) {
                // confirmPasswordInput.setCustomValidity('Las contraseñas no coinciden'); // Use this for browser validation API
                passwordMismatch.style.display = "block";
            } else {
                // confirmPasswordInput.setCustomValidity(''); // Clear custom validity
                passwordMismatch.style.display = "none";
            }
            // Note: The [Compare] attribute handles the actual model validation server-side
            // and integrates with jquery-validation-unobtrusive for client-side validation messages
            // in the span asp-validation-for="ConfirmarContrasena". This script provides extra visual feedback.
        }

        passwordInput.addEventListener('input', validarContraseña);
        confirmPasswordInput.addEventListener('input', validarContraseña);
    </script>
}